[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adrien Ickowicz. Author, maintainer. Ben Raymond. Author. openvolley.org. Originator.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ickowicz , Raymond B (2022). ovva: Shiny App Volleyball Video Analysis. R package version 0.10.11, https://github.com/openvolley/ovva.","code":"@Manual{,   title = {ovva: A Shiny App for Volleyball Video Analysis},   author = {Adrien Ickowicz and Ben Raymond},   year = {2022},   note = {R package version 0.10.11},   url = {https://github.com/openvolley/ovva}, }"},{"path":[]},{"path":"/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"A Shiny App for Volleyball Video Analysis","text":"R package provides a Shiny app viewing volleyball match videos conjunction scout files","code":""},{"path":"/index.html","id":"live-demo","dir":"","previous_headings":"","what":"Live demo","title":"A Shiny App for Volleyball Video Analysis","text":"Try : https://openvolley.shinyapps.io/ovva_demo/ (demo running free (time-limited) shinyapps tier, may available many people used recently.)","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Shiny App for Volleyball Video Analysis","text":"","code":"options(repos = c(openvolley = \"https://openvolley.r-universe.dev\",                   CRAN = \"https://cloud.r-project.org\"))  install.packages(\"ovva\")  ## or  ## install.packages(\"remotes\") ## if needed remotes::install_github(\"openvolley/ovva\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A Shiny App for Volleyball Video Analysis","text":"Try inbuilt demo: start shiny app path DataVolley files:","code":"library(ovva) ovva_shiny_demo() ovva_shiny(data_path = c(PL2018 = \"data/volley/PlusLiga-2018_19\"))"},{"path":"/index.html","id":"notes","dir":"","previous_headings":"Usage","what":"Notes","title":"A Shiny App for Volleyball Video Analysis","text":"order app find video file associated dvw file, video file path must present dvw file. can check inspecting dvw file text editor — see something like: videos hosted online, don’t need locally. includes YouTube videos (must either ‘public’ ‘unlisted’, ‘private’). use online video, enter URL video location: start ovva video_server = \"none\": (note remote video files still need dvw files locally — data_path folder ). video server runs separate thread shiny application . lighttpd executable present system path, used serving videos default, otherwise servr R package used. performance lighttpd better, might want install don’t already . Windows, can use ovva_install_lighttpd() . platforms, ’ll . See https://www.lighttpd.net/download/. Interested aren’t R user, want able easily share functionality players coaches? See hosted version (available subscription).","code":"[3RESERVE] [3VIDEO] Camera0=D:\\video\\2019_03_01-KATS-BEDS.mp4 [3SCOUT] [3RESERVE] [3VIDEO] Camera0=https://www.youtube.com/watch?v=NisDpPFPQwU [3SCOUT] ovva_shiny(data_path = c(MyData = \"my/dvw/path\"), video_server = \"none\")"},{"path":"/reference/ovva.html","id":null,"dir":"Reference","previous_headings":"","what":"ovva — ovva","title":"ovva — ovva","text":"Shiny app supporting functions volleyball video scouted match files.","code":""},{"path":"/reference/ovva_highlight_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"The default handler for highlights within the shiny app — ovva_highlight_handler","title":"The default handler for highlights within the shiny app — ovva_highlight_handler","text":"ovva_highlight_handler provides functions create highlight playlists. Highlights judged according weighting scheme defined ovva_highlight_weighting.","code":""},{"path":"/reference/ovva_highlight_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The default handler for highlights within the shiny app — ovva_highlight_handler","text":"","code":"ovva_highlight_handler(clip_duration = 180)  ovva_highlight_weighting(weights)"},{"path":"/reference/ovva_highlight_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The default handler for highlights within the shiny app — ovva_highlight_handler","text":"clip_duration numeric: maximum highlight clip length seconds weights data.frame: data.frame tibble columns skill, evaluation_code, highlight_weighting. values provided override corresponding defaults can cook version highlight handler function suit liking, pass highlight_handler parameter ovva_shiny.","code":""},{"path":"/reference/ovva_highlight_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The default handler for highlights within the shiny app — ovva_highlight_handler","text":"tibble, columns 'skill', 'specific', 'fun'. row defines playlist entry corresponds specific match conditions. playlist entry referred name given specific, applies skill column skill. corresponding entry fun function takes three arguments (x, play--play data; team, team names look , player, player names look ) returns subset rows x correspond playlist conditions.","code":""},{"path":[]},{"path":"/reference/ovva_install_lighttpd.html","id":null,"dir":"Reference","previous_headings":"","what":"Install lighttpd — ovva_install_lighttpd","title":"Install lighttpd — ovva_install_lighttpd","text":"helper function install lighttpd. Currently works Windows platforms. lighttpd bundle downloaded http://lighttpd.dtech.hu/ saved user appdata directory.","code":""},{"path":"/reference/ovva_install_lighttpd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install lighttpd — ovva_install_lighttpd","text":"","code":"ovva_install_lighttpd(force = FALSE)"},{"path":"/reference/ovva_install_lighttpd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install lighttpd — ovva_install_lighttpd","text":"force logical: force reinstallation lighttpd already exists","code":""},{"path":"/reference/ovva_install_lighttpd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install lighttpd — ovva_install_lighttpd","text":"path installed executable","code":""},{"path":"/reference/ovva_install_lighttpd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Install lighttpd — ovva_install_lighttpd","text":"http://lighttpd.dtech.hu/","code":""},{"path":"/reference/ovva_install_lighttpd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install lighttpd — ovva_install_lighttpd","text":"","code":"if (FALSE) {   ovva_install_lighttpd() }"},{"path":"/reference/ovva_playlist_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"The default handler for playlists within the shiny app — ovva_playlist_handler","title":"The default handler for playlists within the shiny app — ovva_playlist_handler","text":"can cook version function suit liking, pass playlist_handler parameter ovva_shiny.","code":""},{"path":"/reference/ovva_playlist_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The default handler for playlists within the shiny app — ovva_playlist_handler","text":"","code":"ovva_playlist_handler()"},{"path":"/reference/ovva_playlist_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The default handler for playlists within the shiny app — ovva_playlist_handler","text":"tibble, columns 'skill', 'specific', 'fun'. row defines playlist entry corresponds specific match conditions. playlist entry referred name given specific, applies skill column skill. corresponding entry fun function takes three arguments (x, play--play data; team, team names look , player, player names look ) returns subset rows x correspond playlist conditions.","code":""},{"path":[]},{"path":"/reference/ovva_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the Shiny app — ovva_shiny","title":"Launch the Shiny app — ovva_shiny","text":"Launch Shiny app","code":""},{"path":"/reference/ovva_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the Shiny app — ovva_shiny","text":"","code":"ovva_shiny(   data_path,   playlist_handler = ovva_playlist_handler(),   highlight_handler = ovva_highlight_handler(),   video_server = \"lighttpd\",   launch_browser = TRUE,   video_timing_df = ov_video_timing_df(),   ... )"},{"path":"/reference/ovva_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch the Shiny app — ovva_shiny","text":"data_path character function: named character vector paths data files. names used competition names. e.g. c(\"Competition 1\" = \"/path//dvw/files\", \"Competition 2\" = \"/path///dvw/files\"). data_path function, return character vector playlist_handler tibble: tibble provides playlist handler capabilities (see ovva_playlist_handler details) highlight_handler tibble: tibble provides playlist handler capabilities (see ovva_highlight_handler details) video_server string function: string, either \"lighttpd\", \"servr\", \"none\". function, used modify video file path present dvw file. Details TBD launch_browser logical: TRUE, launch app system's default web browser (passed runApp's launch.browser parameter). NULL, launch app, just return shinyApp object video_timing_df data.frame: data.frame default clip timings ... : additional parameters passed UI server functions","code":""},{"path":[]},{"path":"/reference/ovva_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch the Shiny app — ovva_shiny","text":"","code":"if (FALSE) {   ## to use your own data, assuming that your data files are in the data/volley/ folder   ovva_shiny(data_path = c(MyData = \"data/volley\"))    ## or to use the bundled demonstration file   ovva_shiny_demo() }"},{"path":"/reference/ovva_shiny_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"Start the ovva shiny app with a demonstration data set — ovva_shiny_demo","title":"Start the ovva shiny app with a demonstration data set — ovva_shiny_demo","text":"demonstration data set 2018 women's final (first 3) German Bundesliga: Allianz MTV Stuttgart vs SSC Palmberg Schwerin.","code":""},{"path":"/reference/ovva_shiny_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start the ovva shiny app with a demonstration data set — ovva_shiny_demo","text":"","code":"ovva_shiny_demo()"},{"path":[]},{"path":"/reference/ovva_shiny_demo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start the ovva shiny app with a demonstration data set — ovva_shiny_demo","text":"","code":"if (FALSE) {   ovva_shiny_demo() }"},{"path":"/reference/ovva_video_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Start a separate server process for serving video — ovva_video_server","title":"Start a separate server process for serving video — ovva_video_server","text":"Note performance \"servr\" may great, particularly new video, servr read entire video file can serve clips .","code":""},{"path":"/reference/ovva_video_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a separate server process for serving video — ovva_video_server","text":"","code":"ovva_video_server(method, port)"},{"path":"/reference/ovva_video_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a separate server process for serving video — ovva_video_server","text":"method string: either \"lighttpd\" \"servr\". \"lighttpd\" lighttpd executable found, \"servr\" used fallback port integer: port open server . missing NULL, random port 8001 12000","code":""},{"path":"/reference/ovva_video_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start a separate server process for serving video — ovva_video_server","text":"list components method, url, port, dir (source dir files served), cleanup_fun (function run finished server, stop server process clean dir)","code":""},{"path":[]},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. datavolley dv_read ovideo ov_video_timing_df","code":""}]
